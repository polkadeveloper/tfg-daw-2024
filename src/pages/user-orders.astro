---
import Layout from "@/layouts/Layout.astro";

const user = Astro.locals.user;
const response = await fetch(`http://localhost:4321/api/orders/${user.id}`);
const data = await response.json();
---

<Layout title="Emblem - Información de usuario">
  <section class="h-[70vh] grid grid-cols-12 font-cabinetGroteskMedium">
    <article class="col-span-3 relative bg-[#BBBBBB] text-black">
      <h2
        class="absolute top-10 left-5 text-2xl font-cabinetGroteskBold uppercase"
      >
        Hola {user.name}
        {user.lastName}
      </h2>
      <ul
        class="w-full flex flex-col justify-center items-center h-full text-lg"
      >
        <li
          class="border-t-2 border-b-[1px] border-black w-full text-center py-2"
        >
          <a class="flex justify-between items-center px-5" href="/user-info"
            >Datos personales
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="1.5"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="icon icon-tabler icons-tabler-outline icon-tabler-fingerprint"
              ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
                d="M18.9 7a8 8 0 0 1 1.1 5v1a6 6 0 0 0 .8 3"></path><path
                d="M8 11a4 4 0 0 1 8 0v1a10 10 0 0 0 2 6"></path><path
                d="M12 11v2a14 14 0 0 0 2.5 8"></path><path
                d="M8 15a18 18 0 0 0 1.8 6"></path><path
                d="M4.9 19a22 22 0 0 1 -.9 -7v-1a8 8 0 0 1 12 -6.95"
              ></path></svg
            ></a
          >
        </li>
        <li
          class="border-t-[1px] border-b-[1px] border-black bg-[#AAAAAA] w-full text-center py-2"
        >
          <a class="flex justify-between items-center px-5" href="/user-orders"
            >Mis pedidos
            <svg
              width="24px"
              height="24px"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              color="#000000"
              ><path
                d="M3 18C3.55228 18 4 17.5523 4 17C4 16.4477 3.55228 16 3 16C2.44772 16 2 16.4477 2 17C2 17.5523 2.44772 18 3 18Z"
                fill="#000000"
                stroke="#000000"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"></path><path
                d="M21 7.35304L21 16.647C21 16.8649 20.8819 17.0656 20.6914 17.1715L12.2914 21.8381C12.1102 21.9388 11.8898 21.9388 11.7086 21.8381L3.30861 17.1715C3.11814 17.0656 3 16.8649 3 16.647L2.99998 7.35304C2.99998 7.13514 3.11812 6.93437 3.3086 6.82855L11.7086 2.16188C11.8898 2.06121 12.1102 2.06121 12.2914 2.16188L20.6914 6.82855C20.8818 6.93437 21 7.13514 21 7.35304Z"
                stroke="#000000"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"></path><path
                d="M3.52844 7.29363L11.7086 11.8382C11.8898 11.9388 12.1102 11.9388 12.2914 11.8382L20.5 7.27783"
                stroke="#000000"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"></path><path
                d="M12 21L12 12"
                stroke="#000000"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"></path></svg
            ></a
          >
        </li>
        <li
          class="border-t-[1px] border-b-[1px] border-black w-full text-center py-2"
        >
          <a
            class="flex justify-between items-center px-5"
            href="/user-edit-password"
            >Actualizar contraseña
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="1.5"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="icon icon-tabler icons-tabler-outline icon-tabler-password"
              ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
                d="M12 10v4"></path><path d="M10 13l4 -2"></path><path
                d="M10 11l4 2"></path><path d="M5 10v4"></path><path
                d="M3 13l4 -2"></path><path d="M3 11l4 2"></path><path
                d="M19 10v4"></path><path d="M17 13l4 -2"></path><path
                d="M17 11l4 2"></path></svg
            ></a
          >
        </li>
        <li
          class="border-t-[1px] border-b-2 border-black w-full text-center py-2"
        >
          <a
            class="flex justify-between items-center px-5"
            href="/user-payment-methods"
            >Métodos de pago
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="1.5"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="icon icon-tabler icons-tabler-outline icon-tabler-credit-card"
              ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
                d="M3 5m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z"
              ></path><path d="M3 10l18 0"></path><path d="M7 15l.01 0"
              ></path><path d="M11 15l2 0"></path></svg
            ></a
          >
        </li>
      </ul>
    </article>
    <article
      class="col-span-9 flex flex-col gap-5 bg-[#AAAAAA] text-xl px-1 py-5 text-black"
    >
      <ul
        class="flex flex-col gap-5 overflow-y-auto max-h-[55vh] px-4"
        style="scrollbar-width: thin; scrollbar-color: #AAAAAA #FFFFFF;"
      >
        <h2 class="text-2xl font-cabinetGroteskBold uppercase">Mis pedidos</h2>
        <hr class="border-1 border-black" />
        {
          data && data.orders.length > 0 ? (
            Object.values(
              data.orders.reduce((acc, order) => {
                if (!acc[order.transaction_id]) {
                  acc[order.transaction_id] = {
                    ...order,
                    items: [
                      {
                        item_id: order.item_id,
                        quantity: order.quantity,
                        price: Number(order.price),
                        item_name: order.item_name,
                        item_description: order.item_description,
                        item_price: order.item_price,
                        item_discounted: order.item_discounted,
                        item_img_name: order.item_img_name,
                      },
                    ],
                  };
                } else {
                  acc[order.transaction_id].items.push({
                    item_id: order.item_id,
                    quantity: order.quantity,
                    price: Number(order.price),
                    item_name: order.item_name,
                    item_description: order.item_description,
                    item_price: order.item_price,
                    item_discounted: order.item_discounted,
                    item_img_name: order.item_img_name,
                  });
                }
                return acc;
              }, {})
            ).map((order) => (
              <>
                <li class="flex flex-col justify-center gap-10">
                  <div class="flex justify-evenly items-center">
                    <div class="flex flex-col items-center">
                      <p class="font-cabinetGroteskBold">Nº de pedido</p>
                      <p>
                        {(order as { transaction_id: string }).transaction_id}
                      </p>
                    </div>
                    <div class="flex flex-col items-center">
                      <p class="font-cabinetGroteskBold">Fecha de compra</p>
                      <p>
                        {new Date(
                          (order as { transaction_date: Date }).transaction_date
                        ).toLocaleString()}
                      </p>
                    </div>
                    <div class="flex flex-col items-center">
                      <p class="font-cabinetGroteskBold">Método de pago</p>
                      <p>
                        {(order as { payment_method: string }).payment_method}
                      </p>
                    </div>
                    <div class="flex flex-col items-center">
                      <p class="font-cabinetGroteskBold">Estado</p>
                      <p>{(order as { status: string }).status}</p>
                    </div>
                  </div>
                  <ul class="flex justify-center items-center gap-10">
                    {(order as { items: any[] }).items.map((item) => (
                      <li class="flex flex-col justify-center items-center overflow-x-auto">
                        <img
                          decoding="async"
                          src={`https://res.cloudinary.com/dle7lr00f/image/upload/v1709637639/${item.item_img_name}-back.webp`}
                          class="w-40 h-auto transition-transform duration-300 transform aspect-[499/355]"
                          alt={`Imagen de la prenda ${item.item_name}`}
                        />
                        <p class="text-lg font-cabinetGroteskBold">
                          X{item.quantity} {item.item_name}
                        </p>
                        <p class="text-lg font-cabinetGroteskBold">
                          {item.price}€
                        </p>
                      </li>
                    ))}
                  </ul>
                  <p class="text-lg font-cabinetGroteskBold">
                    Total:{" "}
                    {(order as { items: any[] }).items.reduce(
                      (total, item) => total + Number(item.price),
                      0
                    )}{" "}
                    €
                  </p>
                </li>
                <hr class="border-1 border-black" />
              </>
            ))
          ) : (
            <p>No se han encontrado pedidos asociados a esta cuenta</p>
          )
        }
      </ul>
    </article>
  </section>
</Layout>
