---
import Layout from "@/layouts/Layout.astro";
import { camisetas } from "@/services/itemsInfo.ts";
import { arrayTallasPorItemId } from "@/services/sizesInfo.ts";

export async function getStaticPaths() {
  return camisetas.map(
    ({
      itemId,
      collectionId,
      itemName,
      itemDescription,
      itemPrice,
      itemDiscounted,
      itemImgName,
    }) => {
      return {
        params: { id: itemId },
        props: {
          collectionId,
          itemName,
          itemDescription,
          itemPrice,
          itemDiscounted,
          itemImgName,
        },
      };
    }
  );
}

// Desestructuración de propiedades proporcionadas por Astro
const { id } = Astro.params;
const {
  collectionId,
  itemName,
  itemDescription,
  itemPrice,
  itemDiscounted,
  itemImgName,
} = Astro.props;
---

<!-- Componente principal que utiliza las propiedades del producto -->
<Layout title={itemName}>
  <!-- Sección Camiseta -->
  <section
    class="bg-gradient-to-l from-rose-100 to-teal-100 relative min-h-[70vh] p-4 pt-12 pb-10 flex flex-col md:flex-row md:justify-center md:items-center interFont text-base lg:text-lg"
  >
    <article
      class="flex flex-col md:flex-row justify-center items-center gap-12 xl:gap-40"
    >
      <!-- Contenedor de imágenes de la camiseta (frontal y trasera) -->
      <div
        class="m-4 w-72 h-52 md:w-[400px] md:h-64 lg:w-[425px] lg:h-[300px] xl:w-[450px] xl:h-[350px] relative"
        id="camisetaContainer"
      >
        <!-- Imagen trasera de la camiseta -->
        <img
          src=`https://res.cloudinary.com/dle7lr00f/image/upload/v1709637639/${itemImgName}-back.webp`
          alt=""
          class="w-full h-full transition-transform duration-300 transform"
          id="backImage"
          transition:name={`https://res.cloudinary.com/dle7lr00f/image/upload/v1709637639/${itemImgName}-back`}
        />

        <!-- Imagen frontal de la camiseta -->
        <img
          src=`https://res.cloudinary.com/dle7lr00f/image/upload/v1709637639/${itemImgName}-front.webp`
          alt=""
          class="w-full h-full transition-transform duration-300 transform absolute top-0 left-0 opacity-0"
          id="frontImage"
        />
      </div>

      <!-- Sección de detalles del producto -->
      <article
        class="flex flex-col justify-start items-start gap-5 xl:gap-7 md:mr-5"
      >
        <!-- Nombre del producto -->
        <h1
          class="text-2xl lg:text-3xl xl:text-4xl lg:text-center cabinetGrotesk-bold"
          transition:name={`${itemName}`}
        >
          {itemName}
        </h1>
        <!-- Precio del producto -->
        <p transition:name={`${itemPrice + itemName}`}>
          <span class="text-purple-800">{itemPrice}€</span>
        </p>

        <!-- Sección Tallas -->
        <div id="seccionTallas" class="flex gap-2 justify-center items-center">
          <p>Tallas:</p>

          <!-- Sección Botones Tallas -->
          <div
            id="btn-Tallas"
            class="flex justify-center items-center gap-5 text-xs"
          >
            <select
              class="bg-gray-200 hover:bg-gray-300 text-black py-1 px-1 border-2 border-black rounded-lg"
            >
              <!-- Mapeo de opciones de tallas desde las propiedades -->
              <!-- {
                Astro.props.tallas.map((talla) => (
                  <option value={talla}>{talla}</option>
                ))
              } -->

              {
                arrayTallasPorItemId[id - 1].tallas.map((talla) => (
                  <option
                    value={talla.sizeName}
                    disabled={talla.stockQuantity <= 5}
                  >
                    {talla.sizeName}{" "}
                    {talla.stockQuantity <= 5 ? "(Agotado)" : ""}
                  </option>
                ))
              }
            </select>

            <p class="text-red-500 text-lg cabinetGrotesk-bold">
              {
                arrayTallasPorItemId[id - 1].tallas.every(
                  (talla) => talla.outOfStock === 1
                )
                  ? "Producto Agotado"
                  : ""
              }
            </p>
          </div>
        </div>

        <!-- Descripción del producto -->
        <p
          class="max-w-sm lg:max-w-xl xl:max-w-2xl"
          transition:name={`${itemDescription}`}
        >
          {itemDescription}
        </p>

        <!-- Lista de características del producto -->
        <ul class="text-base">
          <li>100% cotton</li>
          <li>Standard fit</li>
          <li>High quality digital print</li>
        </ul>

        <!-- Botón "Add to cart" -->
        <button
          class="bg-purple-300 hover:bg-purple-400 px-2 py-4 md:px-4 md:py-4 text-base flex gap-2 rounded-lg"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
          >
            <!-- Icono de carrito de compra -->
            <path
              fill="#000000"
              d="M17 18c-1.11 0-2 .89-2 2a2 2 0 0 0 2 2a2 2 0 0 0 2-2a2 2 0 0 0-2-2M1 2v2h2l3.6 7.59l-1.36 2.45c-.15.28-.24.61-.24.96a2 2 0 0 0 2 2h12v-2H7.42a.25.25 0 0 1-.25-.25c0-.05.01-.09.03-.12L8.1 13h7.45c.75 0 1.41-.42 1.75-1.03l3.58-6.47c.07-.16.12-.33.12-.5a1 1 0 0 0-1-1H5.21l-.94-2M7 18c-1.11 0-2 .89-2 2a2 2 0 0 0 2 2a2 2 0 0 0 2-2a2 2 0 0 0-2-2Z"
            ></path>
          </svg>Add to cart
        </button>
      </article>
    </article>
  </section>
</Layout>

<!-- Estilos CSS para la sección de cambio de imagen al hacer hover -->
<style>
  #camisetaContainer:hover #backImage {
    opacity: 0; /* Oculta la imagen frontal al hacer hover */
  }

  #camisetaContainer:hover #frontImage {
    opacity: 1; /* Muestra la imagen trasera al hacer hover */
  }
</style>
