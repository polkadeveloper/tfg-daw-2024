---
import Layout from "@/layouts/Layout.astro";
import { arrayTallasPorItemId } from "@/services/sizesInfo";

// Desestructuración de propiedades proporcionadas por Astro
const { id } = Astro.params;

const response = await fetch(`http://localhost:4321/api/${id}`);
const data = await response.json();

// Buscar el atributo con el id proporcionado
// const attribute = data.attributes.find((attribute) => attribute.item_id === id);
const attribute = data.attributes.find(
  (attribute) => attribute.item_id === Number(id)
);
if (!attribute) return Astro.redirect("/404");

const {
  item_id,
  collection_id,
  item_name,
  item_description,
  item_price,
  item_discounted,
  item_img_name,
} = attribute;

const productoAgotado = arrayTallasPorItemId[item_id - 1].tallas.every(
  (talla) => talla.outOfStock === 1
);

// -> Exportamos la constante prerender con valor true para que no actue el SSR
// export const prerender = true;

// -> Exportamos la función getStaticPaths para obtener las rutas de los productos
// export async function getStaticPaths() {
//   return camisetas.map(
//     ({
//       itemId,
//       collectionId,
//       itemName,
//       itemDescription,
//       itemPrice,
//       itemDiscounted,
//       itemImgName,
//     }) => {
//       return {
//         params: { id: itemId },
//         props: {
//           collectionId,
//           itemName,
//           itemDescription,
//           itemPrice,
//           itemDiscounted,
//           itemImgName,
//         },
//       };
//     }
//   );
// }

// Desestructuración de propiedades proporcionadas por Camisetas
// const {
//   collectionId,
//   itemName,
//   itemDescription,
//   itemPrice,
//   itemDiscounted,
//   itemImgName,
// } = Astro.props;
---

<!-- Componente principal que utiliza las propiedades del producto -->
<Layout title=`Emblem - ${item_name}`>
  <!-- Sección Camiseta -->
  <section
    class="min-h-[70vh] bg-gradient-to-l from-rose-100 to-teal-100 relative p-4 pt-12 pb-10 flex flex-col md:flex-row md:justify-center md:items-center interFont text-base lg:text-lg"
  >
    <article
      class="flex flex-col md:flex-row justify-center items-center gap-6 xl:gap-28"
    >
      <!-- Contenedor de imágenes de la camiseta (frontal y trasera) -->
      <div
        class="m-4 w-72 h-52 md:w-[400px] md:h-64 lg:w-[425px] lg:h-[300px] xl:w-[450px] xl:h-[350px] relative"
        id="camisetaContainer"
      >
        <!-- Imagen trasera de la camiseta -->
        <img
          src=`https://res.cloudinary.com/dle7lr00f/image/upload/v1709637639/${item_img_name}-back.webp`
          alt=`Imagen trasera de la prenda: ${item_name}`
          class="w-full h-auto transition-transform duration-300 transform"
          id="backImage"
          transition:name={`https://res.cloudinary.com/dle7lr00f/image/upload/v1709637639/${item_img_name}-back`}
        />

        <!-- Imagen frontal de la camiseta -->
        <img
          src=`https://res.cloudinary.com/dle7lr00f/image/upload/v1709637639/${item_img_name}-front.webp`
          alt=`Imagen frontal de la prenda: ${item_name}`
          class="w-full h-auto transition-transform duration-300 transform absolute top-0 left-0 opacity-0"
          id="frontImage"
        />
      </div>

      <!-- Sección de detalles del producto -->
      <article
        class="flex flex-col justify-start items-start gap-2 xl:gap-5 md:mr-5"
      >
        <!-- Nombre del producto -->
        <h1
          class="text-2xl lg:text-3xl xl:text-4xl lg:text-center font-cabinetGroteskBold"
          transition:name={`${item_name}`}
        >
          {item_name}
        </h1>
        <!-- Precio del producto -->
        <p transition:name={`${item_price + item_name}`}>
          <span class="text-purple-800">{item_price}€</span>
        </p>

        <!-- Sección Tallas -->
        <div id="seccionTallas" class="flex gap-2 justify-center items-center">
          <p>Tallas:</p>

          <!-- Sección Botones Tallas -->
          <div
            id="btn-Tallas"
            class="flex justify-center items-center gap-5 text-xs"
          >
            <select
              class="bg-gray-200 hover:bg-gray-300 cursor-pointer text-black py-1 px-1 border-2 border-black rounded-lg"
            >
              <!-- Mapeo de opciones de tallas desde las propiedades -->

              {
                arrayTallasPorItemId[item_id - 1].tallas.map((talla) => (
                  <option
                    value={talla.sizeName}
                    disabled={talla.stockQuantity <= 5}
                  >
                    {talla.sizeName}{" "}
                    {talla.stockQuantity <= 5 ? "(Agotado)" : ""}
                  </option>
                ))
              }
            </select>

            <p class="text-red-500 text-lg font-cabinetGroteskBold">
              {productoAgotado ? "Producto Agotado" : ""}
            </p>
          </div>
        </div>

        <!-- Descripción del producto -->
        <p
          class="max-w-sm lg:max-w-xl xl:max-w-2xl"
          transition:name={`${item_id + item_description}`}
        >
          {item_description}
        </p>

        <!-- Lista de características del producto -->
        <ul class="text-base">
          <li>100% cotton</li>
          <li>Standard fit</li>
          <li>High quality digital print</li>
        </ul>

        <!-- Botón "Add to cart" -->
        <button
          class="bg-purple-300 hover:bg-purple-400 px-2 py-4 md:px-4 md:py-4 text-base flex gap-2 rounded-lg select-none"
          style={productoAgotado ? "pointer-events: none; opacity: 0.5;" : ""}
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
          >
            <!-- Icono de carrito de compra -->
            <path
              fill="#000000"
              d="M17 18c-1.11 0-2 .89-2 2a2 2 0 0 0 2 2a2 2 0 0 0 2-2a2 2 0 0 0-2-2M1 2v2h2l3.6 7.59l-1.36 2.45c-.15.28-.24.61-.24.96a2 2 0 0 0 2 2h12v-2H7.42a.25.25 0 0 1-.25-.25c0-.05.01-.09.03-.12L8.1 13h7.45c.75 0 1.41-.42 1.75-1.03l3.58-6.47c.07-.16.12-.33.12-.5a1 1 0 0 0-1-1H5.21l-.94-2M7 18c-1.11 0-2 .89-2 2a2 2 0 0 0 2 2a2 2 0 0 0 2-2a2 2 0 0 0-2-2Z"
            ></path>
          </svg>Add to cart
        </button>
      </article>
    </article>
  </section>
</Layout>

<!-- Estilos CSS para la sección de cambio de imagen al hacer hover -->
<style>
  #camisetaContainer:hover #backImage {
    opacity: 0; /* Oculta la imagen frontal al hacer hover */
  }

  #camisetaContainer:hover #frontImage {
    opacity: 1; /* Muestra la imagen trasera al hacer hover */
  }
</style>
